<?php
/**
 * hook_menu_alter
 */
function love_menu_alter(&$items) {
  // Example - disable the page at node/add
  $items['publish'] = $items['node/add/photo'];
	$items['publish']['title'] = t('+Photo');
	$items['publish']['menu_name'] = 'main-menu';
	$items['publish']['weight'] = 100;

  //$items['user']['title callback'] = love_dynamic_menu_call();
}
/* TODO:XXX 
function love_dynamic_menu_call(){
  global $user;
  if($user->uid) {
    return $user->name;
  }else{
    return t('My account');
  }
}*/
/**
 * Implements of hook_theme().
 */
function love_theme($existing, $type, $theme, $path) {
  return array(
    'love_profile_visits' => array(
      'variables' => array(
        'account'   => NULL,
        'timestamp' => NULL,
        'referer'   => NULL,
      ),
    ),
  );
}

function love_init(){
  //drupal_add_js(drupal_get_path('module', 'rate') .'/rate.js');

  drupal_add_css(drupal_get_path('module', 'love') .'/highslide/highslide.css');
  drupal_add_js(drupal_get_path('module', 'love') .'/highslide/highslide.js');
  drupal_add_js(drupal_get_path('module', 'love') .'/highslide/highslide-cfg.js');

}
/**
 * Implements hook_js_alter().
 * Rate JS Order fix...

function love_js_alter(&$js) {dpm('er');
  $rateModulePath = drupal_get_path('module', 'rate');
  foreach($js as $file => $info) {
    if (strpos($file, $rateModulePath) === 0) {
      $js[$file]['scope'] = 'header';
    }
  }
} */
/**
 *  Implements hook_field_widget_form_alter($element, $form_state, $context)
 */
function china_address_field_widget_form_alter(&$form, &$form_state) {
	//TODO
}

//TODO 定制最近来访 主题9宫格
/**
 * Implements hook_block_view().
 * @see user_visits_adv_block_view($delta = '')
 */
function hook_block_view_alter($data, $block) {
  $limit = variable_get('user_visits_adv_block_items_' . $delta, 9);
  switch ($delta) {
    case 0:
      $block = array(
        'subject' => t('Latest visitors'),
        'content' => love_user_visits_adv_visitors_block($limit),
      );
      break;

  }
  return $block;
}
/**
 * Get latest visitors for block content.
 * @see user_visits_adv_visitors_block()
 */
function love_user_visits_adv_visitors_block($limit = 9) {
  global $user;
  $output = '';

  if ($user->uid) {
    $visitors = user_visits_adv_get('visitors', $user->uid);
    if (is_array($visitors)) {
      $visitors = array_slice($visitors, 0, $limit, TRUE);
      foreach ($visitors as $uid => $visit) {
        $account = db_query('SELECT uid, name, picture FROM {users} WHERE uid = :uid', array(':uid' => $uid))->fetchObject();
        $output .= theme('user_visits', array('account' => $account, 'visit' => $visit));
      }
    }
  }
  return $output;
}

function love_form_alter(&$form, &$from_state, $form_id) {
	if($form_id == 'photo_node_form'){ //node/add/photo
			global $user;
      $ur_way = user_relationships_load(array('rtid' => array(1),'between' => array(1,19)),array('count'=>1));
      switch ($ur_way) {
        case '2':
          // two-way relationships.
          $friends = TRUE;
          break;
        case '0':
          // no-way relationships.
          dvm('000');
          break;
        default:
          $acquaintance = user_relationships_load(array('rtid' => array(1),'between' => array(1,19),'requester_id'=>1),array('count'=>1));
          $acquaintanced = user_relationships_load(array('rtid' => array(1),'between' => array(1,19),'requester_id'=>1),array('count'=>19));
          // one-way relationships.
          break;
      }
	}
  
  if($form_id == 'user_register_form') {
    //$form['og_group_ref'][LANGUAGE_NONE][0]['#default_value'] = 2;dpm($form);
  }
//dpm($form);
}
/**
 * if user visit love profile-main or profile-believes +1
 * user_visits++
 * Implements of hook_exit().
 * @see user_visits_exit()
 */
function love_exit() {
  global $user;
  $referer = $_SERVER['HTTP_REFERER'];

  // Don't count if user no has access to profile
  if (!user_access('access user profiles')) {
    return;
  }

  // Don't count anonymous-clicks.
  if (!$user->uid) {
    return;
  }

  // Don't count if role is hidden.
  if (user_visits_is_hidden($user)) {
    return;
  }

  // Try not to count clicks from the user's other profile pages.
  if (strpos($_SERVER['HTTP_REFERER'], arg(0) . '/' . arg(1))) {
    //return;//XXX why???
  }
  // Record visits on user profile pages.
  //profile-*/1
	if((strpos( arg(0),"profile-")==0) && is_numeric(arg(1)) && !arg(2)) {
		if ($user->uid != arg(1)) {
      // Count view.
      user_visits_count($user->uid, arg(1));
    }
	}
}

/**
 * @see template_preprocess_user_picture
 */
function love_user_picture($account) {
  $variables['user_picture'] = '';
  if (variable_get('user_pictures', 0)) {
    //$account = $variables['account'];
    if (!empty($account->picture)) {
      // @TODO: Ideally this function would only be passed file objects, but
      // since there's a lot of legacy code that JOINs the {users} table to
      // {node} or {comments} and passes the results into this function if we
      // a numeric value in the picture field we'll assume it's a file id
      // and load it for them. Once we've got user_load_multiple() and
      // comment_load_multiple() functions the user module will be able to load
      // the picture files in mass during the object's load process.
      if (is_numeric($account->picture)) {
        $account->picture = file_load($account->picture);
      }
      if (!empty($account->picture->uri)) {
        $filepath = $account->picture->uri;
      }
    }
    elseif (variable_get('user_picture_default', '')) {
      $filepath = variable_get('user_picture_default', '');
    }
    if (isset($filepath)) {
      $alt = t("@user's picture", array('@user' => format_username($account)));
      // If the image does not have a valid Drupal scheme (for eg. HTTP),
      // don't load image styles.
      if (module_exists('image') && file_valid_uri($filepath) && $style = variable_get('user_picture_style', '')) {
        $variables['user_picture'] = theme('image_style', array('style_name' => $style, 'path' => $filepath, 'alt' => $alt, 'title' => $alt));
      }
      else {
        $variables['user_picture'] = theme('image', array('path' => $filepath, 'alt' => $alt, 'title' => $alt));
      }
      if (!empty($account->uid) && user_access('access user profiles')) {
        $attributes = array('attributes' => array('title' => t('View user profile.')), 'html' => TRUE);
        $variables['user_picture'] = l($variables['user_picture'], "user/$account->uid", $attributes);
      }
    }
  }
  return $variables['user_picture'];
}